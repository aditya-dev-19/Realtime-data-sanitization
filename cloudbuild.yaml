steps:
  # Step 1: Use a git image and run a script to install git-lfs and pull files
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y git-lfs
        git lfs pull

  # Step 2: Build the Docker image using the files (including LFS) from the previous step
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/realtime-data-sanitization:$COMMIT_SHA', '.']

  # Step 3: Push the image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/realtime-data-sanitization:$COMMIT_SHA']

  # Step 4: Deploy the new image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'YOUR_SERVICE_NAME'   # <-- IMPORTANT: Replace with your Cloud Run service name
      - '--image'
      - 'gcr.io/$PROJECT_ID/realtime-data-sanitization:$COMMIT_SHA'
      - '--region'
      - 'YOUR_REGION'         # <-- IMPORTANT: Replace with your service region (e.g., us-central1)
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated' # Keep if your API is public

# This tells Cloud Build what images to produce
images:
  - 'gcr.io/$PROJECT_ID/realtime-data-sanitization:$COMMIT_SHA'